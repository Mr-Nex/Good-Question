public class Chef {

	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int[] arr = {1,1,1,3,3,2,2,4,4,4};
		int k = sc.nextInt();
		int x = 7;
		int ctr=0;
		int[] res = new int[k];
		PriorityQueue<Entry> pq = new PriorityQueue<>();
		HashMap<Integer,Integer> hm = new HashMap<>();
		for(int i=0;i<arr.length;i++) {
			if(hm.get(arr[i])==null) {
				hm.put(arr[i],1);
			}else {
				hm.put(arr[i],hm.get(arr[i])+1);
			}
		}
		for(Map.Entry<Integer,Integer> me : hm.entrySet()) {
			pq.add(new Entry(me.getValue(),me.getKey()));
			if(pq.size()>k) {
				pq.poll();
			}
		}
		while(pq.size()>0) {
			res[ctr++] = pq.poll().getVal();
		}
		
		for(int i=0;i<res.length;i++) {
			System.out.print(res[i]+" ");
		}
	}
}

class Entry implements Comparable<Entry>{
	
	private int key;
	private int val;

	@Override
	public int compareTo(Entry e) {
		return this.key - e.key;
	}
	
	public Entry(int k, int v) {
		this.key = k;
		this.val = v;
	}
	
	public int getKey() {
		return this.key;
	}

	public int getVal() {
		return this.val;
	}		
}
